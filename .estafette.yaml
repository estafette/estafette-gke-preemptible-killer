builder:
  track: dev

labels:
  app-group: estafette-controllers
  team: estafette-team
  language: golang

version:
  semver:
    major: 1
    minor: 3

stages:
  build:
    image: golang:1.13.0-alpine3.10
    env:
      CGO_ENABLED: 0
      GOOS: linux
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    repositories:
    - estafette
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    repositories:
    - estafette

  lint-helm-chart:
    image: extensions/helm:dev
    action: lint
    prerelease: true

  package-helm-chart:
    image: extensions/helm:dev
    action: package
    prerelease: true

  test-helm-chart:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.12
      ports:
      - port: 8443
      - port: 10080
        readiness:
          path: /kubernetes-ready
          timeoutSeconds: 180
    image: extensions/helm:dev
    action: test
    prerelease: true

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: master

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish
    prerelease: true

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  release:
    clone: true
    stages:
      package-helm-chart:
        image: extensions/helm:dev
        action: package

      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: master

      publish-helm-chart:
        image: extensions/helm:dev
        action: publish
        purgePrerelease: true

      create-github-release:
        image: extensions/github-release:dev
        version: ${ESTAFETTE_BUILD_VERSION_MAJOR}.${ESTAFETTE_BUILD_VERSION_MINOR}.0
        closeMilestone: true